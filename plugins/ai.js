/*‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫
    ‚≠êÔº∞Ôº≤ÔºØÔº™Ôº•Ôº£Ôº¥ ÔºÆÔº°Ôº≠Ôº•:
     Ôº°Ôº¨Ôº©Ôº¥Ôº°  Ôº∑Ôº®Ôº°Ôº¥Ôº≥Ôº°Ôº∞Ôº∞ Ôº¢ÔºØÔº¥
    
    ‚≠êÔº§Ôº•Ôº∂Ôº•Ôº¨ÔºØÔº∞Ôº•Ôº≤
     Ôº∞Ôº°ÔºÆÔº§Ôº•Ôºπ Ôº™Ôº© 
     
    ‚≠ê ÔºØÔºµÔº≤ Ôº∑Ôº•Ôº¢Ôº≥Ôº©Ôº¥Ôº•
     https://github.com/yash27git/SUBZERO-MD

¬© Ôº¥Ôº≤Ôºπ Ôº§Ôº•Ôº£Ôº≤ÔºπÔº∞Ôº¥Ôº©ÔºÆÔºß Ôº©Ôº¶ ÔºπÔºØÔºµ Ôº£Ôº°ÔºÆ‚ö†

‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫*/


const axios = require('axios');
const config = require('../config');
const { cmd, commands } = require('../command');

cmd(
    {
        pattern: "ai",
        desc: "üí¨ Chat with Gemini Pro AI",
        react: "üß†",
        category: "ai",
        filename: __filename,
    },
    async (conn, mek, m, { from, q, reply }) => {
        try {
            if (!q) return reply("‚ùó Please provide a query. Usage: .ai [your message]");

            const response = await axios.get(`https://kaiz-apis.gleeze.com/api/gemini-pro`, {
                params: {
                    q: q,
                    uid: from, // Using the sender's ID dynamically
                },
                headers: {
                    Authorization: `Bearer ${config.GEMINI_API_KEY}`, // Pass API key if required
                },
            });

            const aiReply = `ü§ñ *Gemini Pro AI*:
${response.data.message}

*POWERED BY YASH*`;

            return reply(aiReply);
        } catch (e) {
            console.error("AI Command Error:", e.response?.data || e.message || e);
            return reply(
                "‚ö†Ô∏è An error occurred while fetching the AI response. Please check your query and try again."
            );
        }
    }
);

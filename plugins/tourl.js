/*‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫
    ‚≠êÔº∞Ôº≤ÔºØÔº™Ôº•Ôº£Ôº¥ ÔºÆÔº°Ôº≠Ôº•:
     Ôº°Ôº¨Ôº©Ôº¥Ôº°  Ôº∑Ôº®Ôº°Ôº¥Ôº≥Ôº°Ôº∞Ôº∞ Ôº¢ÔºØÔº¥
    
    ‚≠êÔº§Ôº•Ôº∂Ôº•Ôº¨ÔºØÔº∞Ôº•Ôº≤
     Ôº∞Ôº°ÔºÆÔº§Ôº•Ôºπ Ôº™Ôº© 
     
    ‚≠ê ÔºØÔºµÔº≤ Ôº∑Ôº•Ôº¢Ôº≥Ôº©Ôº¥Ôº•
     https://github.com/yash27git/SUBZERO-MD

¬© Ôº¥Ôº≤Ôºπ Ôº§Ôº•Ôº£Ôº≤ÔºπÔº∞Ôº¥Ôº©ÔºÆÔºß Ôº©Ôº¶ ÔºπÔºØÔºµ Ôº£Ôº°ÔºÆ‚ö†

‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫*/



const config = require('../config');
const { cmd, commands } = require('../command');
const axios = require("axios");
const fs = require("fs");
const FormData = require("form-data");

cmd({
  pattern: "url",
  alias: ["upload", "filelink"],
  desc: "Upload file and get direct link",
  react: "üîó",
  category: "file",
  filename: __filename
}, async (conn, mek, m, {
  from,
  quoted,
  body,
  isCmd,
  command,
  args,
  q,
  isGroup,
  sender,
  senderNumber,
  botNumber2,
  botNumber,
  pushname,
  isMe,
  isOwner,
  groupMetadata,
  groupName,
  participants,
  groupAdmins,
  isBotAdmins,
  isAdmins,
  reply
}) => {
  try {
    if (!/video/.test(body) && !/image/.test(body)) {
      return reply("*‚ùå REQUEST ERROR!!*\n\n> *Reply/Send an Image or Video with Caption `.url`*");
    }

    await conn.sendMessage(from, {
      react: {
        text: '‚è≥',
        key: m.key
      }
    });

    if (!quoted) {
      return reply("*‚ùå REQUEST ERROR!!*\n\n> *Reply/Send an Image or Video with Caption `.url`*");
    }

    let filePath = await conn.downloadAndSaveMediaMessage(quoted);

    // Upload to server
    let uploadedFile = await shannzCdn(filePath);

    if (uploadedFile && uploadedFile.status && uploadedFile.result?.url) {
      const message = `*‚úÖ SUCCESSFUL UPLOAD!*\n\nüîó *DIRECT LINK:*\n${uploadedFile.result.url}\n\n> POWERED BY Alita`;
      await conn.sendMessage(from, {
        text: message
      });
    } else {
      await reply("*‚ùå Failed to upload the file or retrieve the link.*");
    }

    // Delete local file
    await fs.unlinkSync(filePath);

    await conn.sendMessage(from, {
      react: {
        text: '‚úÖ',
        key: m.key
      }
    });
  } catch (error) {
    console.error("Upload Error:", error);
    await reply("*‚ùå An Error Occurred While Processing Your Request.*");
  }
});